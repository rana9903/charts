"""
Panda dataframe is 
"""

data = [['Alex',10],['Bob',12],['Clarke',13], ['Rana', 60]]
        df = pd.DataFrame(data,columns=['Firstname','Age'], index = ['rank1','rank2','rank3', 'rank4'], dtype = float)
        print df
        
""""    
Its output is as follows −
           Firstname   Age
rank1      Alex  10.0
rank2       Bob  12.0
rank3    Clarke  13.0
rank4      Rana  60.0
""""     
        print "How to add new rows"
        data = [['Alexa',10]]
        df1 = pd.DataFrame (data,columns=['Firstname','Age'], index = ['rank5'] )
        df=df.append(df1)
        print df 
 """"    
Its output is as follows −
 Firstname   Age
rank1      Alex  10.0
rank2       Bob  12.0
rank3    Clarke  13.0
rank4      Rana  60.0
rank5     Alexa  10.0

"""
        print "Adding new coloumns"
        df ['phone'] = pd.Series([10,15,16,11, 3], index=df.index)
        print df 
 """"    
Its output is as follows −
Adding new coloumns
      Firstname   Age  phone
rank1      Alex  10.0     10
rank2       Bob  12.0     15
rank3    Clarke  13.0     16
rank4      Rana  60.0     11
rank5     Alexa  10.0      3

"""
print "Reversing dataframe"
df =df[::-1]
print df 

"""
Its output is as follows −
Reversing dataframe
      Firstname   Age  phone
rank5     Alexa  10.0      3
rank4      Rana  60.0     11
rank3    Clarke  13.0     16
rank2       Bob  12.0     15
rank1      Alex  10.0     10

"""
print "How to reverse the data "
    data = data[::-1]
    print data

    print "How  to locate data"
    print data.iloc[0, 0] # Interger location Will locate first record 
    print data.iloc[2]['Close'] # will find the closing value 3rd row from the top.  Always starts from 0 when starting from the top
    print data.iloc[-2]['Close'] # Will find the 2nd row from the bottom 
  
    print  "How to slice a column"
    print  (data['Low'].values) # Single Row 
   
    print data.loc[:,'High'].to_string(index=False) #  All rows, High column.

    print data.loc['2018-04-17':'2018-04-11', 'High':'Low'] # Range Values From  row '2018-04-17' to '2018-04-11', from column "High" to "Low"
    print data.loc[:, 'High':'Low']  #  Range value: All rows,  from Coloumn 'High' to 'Low'
     
    print "Printing All row, Right most colomn: ", data.iloc[:,-1]

    print "Print all index", data.index
    print "Printing all COlumn Header: ",  data.columns

        
        
 """
 How  to locate data
12.7
13.12
10.77
How to slice a column
[12.48 12.93 13.06 13.25 13.36 13.19 13.01 13.03 12.9  12.79 12.72 12.8
 12.34 12.66 12.51 12.48 12.63 12.57 12.58 12.63 12.75 12.46 12.46 12.36
 12.36 12.53 12.23 11.97 12.   12.12 11.94 11.79 11.63 11.51 11.51 11.29
 11.04 11.   10.94 11.06 11.   11.14 11.05 11.04 11.23 11.19 11.04 10.95
 10.95 10.88 10.82 10.84 10.77 10.85 10.8  10.8  10.95 10.75 10.62 10.75]
Date
12.73
13.08
13.30
13.57
13.44
13.42
13.14
13.14
13.10
12.90
12.87
12.99
12.71
12.95
12.72
12.70
12.82
12.73
12.75
12.82
12.88
12.76
12.75
12.64
12.52
12.71
12.58
12.13
12.19
12.27
12.10
12.08
11.86
11.72
11.83
11.83
11.30
11.29
11.25
11.31
11.22
11.33
11.20
11.32
11.42
11.57
11.17
11.14
11.21
10.97
10.96
10.95
10.93
10.95
10.91
11.06
11.11
11.05
10.78
10.95
             High    Low
Date                    
2018-04-17  12.13  11.97
2018-04-16  12.19  12.00
2018-04-13  12.27  12.12
2018-04-12  12.10  11.94
2018-04-11  12.08  11.79
             High    Low
Date                    
2018-05-25  12.73  12.48
2018-05-24  13.08  12.93
2018-05-23  13.30  13.06
2018-05-22  13.57  13.25
2018-05-18  13.44  13.36
2018-05-17  13.42  13.19
2018-05-16  13.14  13.01
2018-05-15  13.14  13.03
2018-05-14  13.10  12.90
2018-05-11  12.90  12.79
2018-05-10  12.87  12.72
2018-05-09  12.99  12.80
2018-05-08  12.71  12.34
2018-05-07  12.95  12.66
2018-05-04  12.72  12.51
2018-05-03  12.70  12.48
2018-05-02  12.82  12.63
2018-05-01  12.73  12.57
2018-04-30  12.75  12.58
2018-04-27  12.82  12.63
2018-04-26  12.88  12.75
2018-04-25  12.76  12.46
2018-04-24  12.75  12.46
2018-04-23  12.64  12.36
2018-04-20  12.52  12.36
2018-04-19  12.71  12.53
2018-04-18  12.58  12.23
2018-04-17  12.13  11.97
2018-04-16  12.19  12.00
2018-04-13  12.27  12.12
2018-04-12  12.10  11.94
2018-04-11  12.08  11.79
2018-04-10  11.86  11.63
2018-04-09  11.72  11.51
2018-04-06  11.83  11.51
2018-04-05  11.83  11.29
2018-04-04  11.30  11.04
2018-04-03  11.29  11.00
2018-04-02  11.25  10.94
2018-03-29  11.31  11.06
2018-03-28  11.22  11.00
2018-03-27  11.33  11.14
2018-03-26  11.20  11.05
2018-03-23  11.32  11.04
2018-03-22  11.42  11.23
2018-03-21  11.57  11.19
2018-03-20  11.17  11.04
2018-03-19  11.14  10.95
2018-03-16  11.21  10.95
2018-03-15  10.97  10.88
2018-03-14  10.96  10.82
2018-03-13  10.95  10.84
2018-03-12  10.93  10.77
2018-03-09  10.95  10.85
2018-03-08  10.91  10.80
2018-03-07  11.06  10.80
2018-03-06  11.11  10.95
2018-03-05  11.05  10.75
2018-03-02  10.78  10.62
2018-03-01  10.95  10.75
Printing All row, Right most colomn:  Date
2018-05-25    1469800
2018-05-24     814800
2018-05-23    1417500
2018-05-22    1189000
2018-05-18     986300
2018-05-17    1056200
2018-05-16     481300
2018-05-15     816700
2018-05-14     981700
2018-05-11     482700
2018-05-10    1236400
2018-05-09    1820200
2018-05-08    3325700
2018-05-07    1244300
2018-05-04     765000
2018-05-03    1215900
2018-05-02    1411600
2018-05-01    1744800
2018-04-30    2079200
2018-04-27    1202300
2018-04-26    1494000
2018-04-25    1955800
2018-04-24    1069400
2018-04-23     796000
2018-04-20    1489300
2018-04-19    2248600
2018-04-18    2189900
2018-04-17    1482900
2018-04-16    1512800
2018-04-13    1711200
2018-04-12     880000
2018-04-11    1969600
2018-04-10    2234700
2018-04-09    1814900
2018-04-06    2383800
2018-04-05    2453500
2018-04-04    1328000
2018-04-03    1130900
2018-04-02    1243700
2018-03-29    1555100
2018-03-28    1042400
2018-03-27    1137400
2018-03-26    1095500
2018-03-23     746700
2018-03-22    1455300
2018-03-21    2841800
2018-03-20     650300
2018-03-19     979900
2018-03-16    1565600
2018-03-15    1600800
2018-03-14     932000
2018-03-13     883800
2018-03-12     388800
2018-03-09    1303300
2018-03-08    1391100
2018-03-07    2179900
2018-03-06    1121300
2018-03-05    1452300
2018-03-02    1472800
2018-03-01    2784400
Name: Volume, dtype: int32
Print all index DatetimeIndex(['2018-05-25', '2018-05-24', '2018-05-23', '2018-05-22',
               '2018-05-18', '2018-05-17', '2018-05-16', '2018-05-15',
               '2018-05-14', '2018-05-11', '2018-05-10', '2018-05-09',
               '2018-05-08', '2018-05-07', '2018-05-04', '2018-05-03',
               '2018-05-02', '2018-05-01', '2018-04-30', '2018-04-27',
               '2018-04-26', '2018-04-25', '2018-04-24', '2018-04-23',
               '2018-04-20', '2018-04-19', '2018-04-18', '2018-04-17',
               '2018-04-16', '2018-04-13', '2018-04-12', '2018-04-11',
               '2018-04-10', '2018-04-09', '2018-04-06', '2018-04-05',
               '2018-04-04', '2018-04-03', '2018-04-02', '2018-03-29',
               '2018-03-28', '2018-03-27', '2018-03-26', '2018-03-23',
               '2018-03-22', '2018-03-21', '2018-03-20', '2018-03-19',
               '2018-03-16', '2018-03-15', '2018-03-14', '2018-03-13',
               '2018-03-12', '2018-03-09', '2018-03-08', '2018-03-07',
               '2018-03-06', '2018-03-05', '2018-03-02', '2018-03-01'],
              dtype='datetime64[ns]', name=u'Date', freq=None)
Printing all COlumn Header:  Index([u'Open', u'High', u'Low', u'Close', u'Adj Close', u'Volume'], dtype='object')
Numbe of rows: 60
 """
        
        

""""
https://www.tutorialspoint.com/python_pandas/python_pandas_dataframe.htm
https://stackoverflow.com/questions/12555323/adding-new-column-to-existing-dataframe-in-python-pandas

""""



